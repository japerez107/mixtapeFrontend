{"version":3,"sources":["components/NavTabs/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","components/Card/index.js","components/SearchForm/index.js","components/MixTapeDetail/index.js","utils/API.js","components/List/index.js","components/DeleteBtn/index.js","components/SelectBtn/index.js","components/MixTapeContainer/index.js","components/pages/MixTapeHome.js","App.js","registerServiceWorker.js","index.js"],"names":["func1","window","open","func2","location","origin","NavTabs","react_default","a","createElement","className","onClick","event","Container","props","children","Row","Col","size","split","map","join","Card","heading","SearchForm","htmlFor","style","backgroundColor","description","onChange","handleInputChange","value","name","type","placeholder","handleFormSubmit","buttonText","MixTapeDetail","hideStyle","display","showStyle","margin","border","width","height","console","log","trackInReceivingDatabase","trackInDatabase","results","items","result","key","track","uri","some","e","trackId","SpotifyPlayer_default","view","theme","onClickActionBan","role","tabIndex","onClickActionSave","API","getSongs","loggedInUserId","axios","get","banSong","trackData","post","deleteSong","id","delete","deleteAllSongs","List","_ref","ListItem","_ref2","DeleteBtn","Object","assign","SelectBtn","MixTapeContainer","state","search","selectedSendingPlaylistSearch","selectedSendingPlaylistData","selectedSendingPlaylistDetails","userData","banishedSongs","serverData","receivingPlaylist","userPlaylists","getPlaylistDetailsSetState","trackUri","stateKey","spotifyApi","require","accessToken","queryString","parse","access_token","setAccessToken","getPlaylist","then","data","body","_this","setState","defineProperty","concat","err","getAllTracksSetState","offsetIncrementer","myPersonalPlaylistTracks","final","getPlaylists","offsetVal","getPlaylistTracks","limit","offset","next","forEach","val","index","push","viewMongoDbData","currentUserId","res","catch","unBanishAllSongs","handleSaveSong","addTracksToPlaylist","handleBanSong","title","artists","artist","userName","display_name","userId","target","handleReceivingPlaylistSubmit","preventDefault","handleReceivingPlaylistSubmitLink","playlistId","handleSendingPlaylistSubmit","handleSendingPlaylistSubmitLink","_this2","this","getMe","getUserPlaylists","_this3","components_Container","components_Row","components_Col","components_Card","components_MixTapeDetail","userIdCurrentlyLoggedIn","components_SearchForm","item","owner","components_SelectBtn","banishedTrack","_id","components_DeleteBtn","Component","Search","components_MixTapeContainer","App","react_router_dom","components_NavTabs","react_router","exact","path","component","MixTapeHome","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6744e5a9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import { Link } from \"react-router-dom\";\n\n\nlet func1 = () => {\nwindow.open('https://accounts.spotify.com/en/logout', '_blank' )\n}\n\nlet func2 = () => {\n  window.location = window.location.origin\n}\n\n\nfunction NavTabs() {\n  return (\n    <ul className=\"nav nav-tabs\">\n      {/* <li className=\"nav-item\">\n        <Link\n          to=\"/\"\n          className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n        >\n          Home\n        </Link>\n      </li>\n      <li className=\"nav-item\">\n        <Link to=\"/search\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\n          Spotify Sign Out\n        </Link>\n      </li> */}\n      <li className=\"nav-item\">\n        <button className=\"signout\" onClick={function(event){ func1(); func2()}}>Spotify Sign Out\n         </button>\n      </li>\n    </ul>\n  );\n}\n\nexport default NavTabs;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n    return <div className='container'>{props.children}</div>;\n}\n\nexport default Container;","import React from \"react\";\n\nfunction Row(props) {\n  return <div className='row'>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\"><h3 style={{backgroundColor: \"coral\"}}>{props.description}</h3></label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name={props.name}\n          type=\"text\"\n          className=\"form-control\"\n          placeholder={props.placeholder}\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          {props.buttonText}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport SpotifyPlayer from 'react-spotify-player';\n\nfunction MixTapeDetail(props) {\n  // CSS for hiding songs already in our database\n  const hideStyle = {\n    display: 'none',\n    // margin: '40px',\n    // border: '5px solid blue'\n  };\n  const showStyle = {\n    margin: '40px',\n    border: '5px solid pink'\n  };\n\n  //CSS for Spotify Players\n  const size = {\n    width: '100%',\n    height: 80,\n  };\n  const view = 'list';\n  const theme = 'black';\n  return (\n    <div className=\"text-center\">\n      {console.log(\"Songs Currently in Personal Playlist\", props.trackInReceivingDatabase)}\n      {console.log(\"Songs Currently in Banished Database\", props.trackInDatabase)}\n      {props.results.items.map(result => (\n        <div\n          key={result.track.uri}\n          style={\n            (props.trackInDatabase.some(e => e.trackId === result.track.uri)) || (props.trackInReceivingDatabase.some(e => e.track.uri === result.track.uri))\n            ? hideStyle\n            : showStyle\n            }>\n          <SpotifyPlayer\n            uri={result.track.uri}\n            size={size}\n            view={view}\n            theme={theme}\n          />\n          <span\n            onClick={() => { props.onClickActionBan(result.track) }}\n            className=\"btn btn-danger\"\n            role=\"button\"\n            tabIndex=\"0\">\n            Banish\n          </span>\n          <span\n            onClick={() => { props.onClickActionSave(result.track) }}\n            className=\"btn btn-success\"\n            role=\"button\"\n            tabIndex=\"0\">\n            Save\n          </span>\n          <hr />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default MixTapeDetail;","import axios from \"axios\";\n\nexport default {\n  // Gets all songs\n  getSongs: function (loggedInUserId) {\n    return axios.get(\"/api/tracks/?q=\" + loggedInUserId);\n  },\n  // Saves track to the database\n  banSong: function (trackData) {\n    return axios.post(\"/api/tracks\", trackData);\n  },\n  // Deletes the track with the given id\n  deleteSong: function (id) {\n    return axios.delete(\"/api/tracks/\" + id);\n  },\n  // Deletes the track with the given id\n  deleteAllSongs: function (loggedInUserId) {\n    return axios.delete(\"/api/tracks/?q=\" + loggedInUserId);\n  }\n};\n","import React from \"react\";\nimport \"./style.css\";\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      UnBanish\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SelectBtn(props) {\n  return (\n    <span className=\"select-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      Select\n    </span>\n  );\n}\n\nexport default SelectBtn;\n","import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Row from \"../Row\";\nimport Col from \"../Col\";\nimport Card from \"../Card\";\nimport SearchForm from \"../SearchForm\";\nimport MixTapeDetail from \"../MixTapeDetail\";\nimport API from \"../../utils/API\";\nimport { List, ListItem } from \"../List\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport SelectBtn from \"../SelectBtn\";\nimport queryString from 'query-string';\n\n\nclass MixTapeContainer extends Component {\n  state = {\n    result: \"\",\n    search: \"\",\n    selectedSendingPlaylistSearch: \"\",\n    selectedSendingPlaylistData: [],\n    selectedSendingPlaylistDetails: \"\",\n    userData: \"\",\n    banishedSongs: [],\n    serverData: \"\",\n    receivingPlaylist: \"\",\n    userPlaylists: []\n  };\n\n  componentDidMount() {\n    let SpotifyWebApi = require('spotify-web-api-node');\n    let spotifyApi = new SpotifyWebApi();\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n\n    this.viewMongoDbData()\n\n    spotifyApi.setAccessToken(accessToken);\n\n    spotifyApi.getMe()\n      .then(data => this.viewMongoDbData(data.body.id), function (err) {\n        console.log('Something went wrong!', err);\n      })\n\n    spotifyApi.getMe()\n      .then(data => this.setState(\n        {\n          userData: data.body\n        }), function (err) {\n          console.log('Something went wrong!', err);\n        });\n\n    spotifyApi.getUserPlaylists(this.state.userData.id)\n      .then(data => this.setState(\n        {\n          userPlaylists: data.body.items\n        }), function (err) {\n          console.log('Something went wrong!', err);\n        }\n      );\n  };\n\n  getPlaylistDetailsSetState = (trackUri, stateKey) => {\n    let SpotifyWebApi = require('spotify-web-api-node');\n    let spotifyApi = new SpotifyWebApi();\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    spotifyApi.setAccessToken(accessToken);\n    let state = stateKey;\n    spotifyApi.getPlaylist(trackUri)\n      .then(data => {\n        console.log('Selected Playlist Details', data.body);\n        this.setState({ [`${state}`]: data.body })\n      },\n        function (err) {\n          console.log('Something went wrong!', err);\n        }\n      );\n  }\n\n  getAllTracksSetState = (trackUri, stateKey) => {\n    let state = stateKey;\n    let offsetVal = 0;\n    let offsetIncrementer = 0;\n    const myPersonalPlaylistTracks = [];\n    let final = {\n      items: []\n    };\n    let getPlaylists = (offsetVal, trackUri) => {\n      let SpotifyWebApi = require('spotify-web-api-node');\n      let spotifyApi = new SpotifyWebApi();\n      let parsed = queryString.parse(window.location.search);\n      let accessToken = parsed.access_token;\n      spotifyApi.setAccessToken(accessToken);\n      spotifyApi.getPlaylistTracks(trackUri, { limit: 100, offset: offsetVal })\n        .then(data => {\n          if (data.body.next != null) {\n            console.log(\"On we Go!\")\n            data.body.items.forEach(function (val, index) {\n              myPersonalPlaylistTracks.push(val);\n            });\n            offsetIncrementer += 100;\n            getPlaylists(offsetIncrementer, trackUri)\n          } else {\n            data.body.items.forEach(function (val, index) {\n              myPersonalPlaylistTracks.push(val);\n              final.items = myPersonalPlaylistTracks;\n            });\n            console.log('Selected Playlist Contains These Tracks', final)\n            this.setState({ [`${state}`]: final })\n          }\n        },\n          function (err) {\n            console.log('Something went wrong!', err);\n          }\n        );\n    }\n    getPlaylists(offsetVal, trackUri, stateKey);\n  }\n\n\n  viewMongoDbData = (currentUserId) => {\n    API.getSongs(currentUserId)\n      .then(res => this.setState({ banishedSongs: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  unBanishAllSongs = () => {\n    API.deleteAllSongs(this.state.userData.id)\n      .then(res => this.viewMongoDbData(this.state.userData.id))\n      .catch(err => console.log(err));\n  };\n\n  deleteSong = id => {\n    API.deleteSong(id)\n      .then(res => this.viewMongoDbData(this.state.userData.id))\n      .catch(err => console.log(err));\n  };\n\n  handleSaveSong = track => {\n    let SpotifyWebApi = require('spotify-web-api-node');\n    let spotifyApi = new SpotifyWebApi();\n    let parsed = queryString.parse(window.location.search);\n    let accessToken = parsed.access_token;\n    spotifyApi.setAccessToken(accessToken);\n    spotifyApi.addTracksToPlaylist(this.state.selectedSendingPlaylistDetails.id, [`spotify:track:${track.id}`])\n      .then(res => this.getAllTracksSetState(this.state.selectedSendingPlaylistSearch, 'selectedSendingPlaylistData'))\n      .catch(err => console.log(err));\n  };\n\n  handleBanSong = track => {\n    API.banSong({\n      title: track.name,\n      artists: track.artists.map(artist => artist.name).join(', '),\n      userName: this.state.userData.display_name,\n      userId: this.state.userData.id,\n      trackId: track.uri,\n    })\n      .then(res => this.viewMongoDbData(this.state.userData.id))\n      .catch(err => console.log(err));\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleReceivingPlaylistSubmit = event => {\n    event.preventDefault();\n    console.log(this.state.search);\n    this.getAllTracksSetState(this.state.search, 'serverData');\n    this.getPlaylistDetailsSetState(this.state.search, 'receivingPlaylist');\n  };\n\n  handleReceivingPlaylistSubmitLink = playlistId => {\n    this.setState({ search: playlistId })\n    this.getAllTracksSetState(playlistId, 'serverData');\n    this.getPlaylistDetailsSetState(playlistId, 'receivingPlaylist');\n  };\n\n  handleSendingPlaylistSubmit = event => {\n    event.preventDefault();\n    console.log(this.state.selectedSendingPlaylistSearch);\n    this.getAllTracksSetState(this.state.selectedSendingPlaylistSearch, 'selectedSendingPlaylistData');\n    this.getPlaylistDetailsSetState(this.state.selectedSendingPlaylistSearch, 'selectedSendingPlaylistDetails');\n  };\n\n  handleSendingPlaylistSubmitLink = playlistId => {\n    this.setState({ selectedSendingPlaylistSearch: playlistId })\n    this.getAllTracksSetState(playlistId, 'selectedSendingPlaylistData');\n    this.getPlaylistDetailsSetState(playlistId, 'selectedSendingPlaylistDetails');\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card\n              heading={this.state.receivingPlaylist.name}\n            >\n              {this.state.serverData ? (\n                <MixTapeDetail\n                  results={this.state.serverData}\n                  onClickActionBan={this.handleBanSong}\n                  onClickActionSave={this.handleSaveSong}\n                  trackInDatabase={this.state.banishedSongs}\n                  trackInReceivingDatabase={this.state.selectedSendingPlaylistData.items}\n                  userIdCurrentlyLoggedIn={this.state.userData.id}\n                />\n              ) : (\n                  <div>\n                    <h3>Welcome to MixTape: <span style={{ backgroundColor: \"coral\" }}>{this.state.userData.display_name}</span></h3>\n                  </div>\n                )}\n              {this.state.userData ? (\n                  <div>\n                  </div>\n              ) : (\n                <div>\n                  <p>Click Login Button to Begin!</p>\n                  <span\n//////////////////////////////////FLIP COMMENTED/UNCOMMENTED BELOW TEXT ON LOCAL\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                  \n                    // onClick={() => window.location = 'http://localhost:8888/login'}\n                    onClick={() => window.location = 'https://mixtapebackend.herokuapp.com/login'}\n//////////////////////////////////FLIP COMMENTED/UNCOMMENTED ABOVE TEXT ON LOCAL\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\   \n                    className=\"btn btn-primary\"\n                    role=\"button\"\n                    tabIndex=\"0\">\n                    Login to Spotify\n                  </span>\n                </div>\n                )}\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Playlists\">\n              {this.state.selectedSendingPlaylistDetails ? (\n                <div>\n                  <h3>Select Public Playlist</h3>\n                </div>\n              ) : (\n                  <div>\n                  </div>\n                )}\n              {this.state.selectedSendingPlaylistDetails ? (\n                <div>\n                  <SearchForm\n                    placeholder=\"Public Playlist URI\"\n                    buttonText=\"Submit\"\n                    value={this.state.search}\n                    handleInputChange={this.handleInputChange}\n                    name=\"search\"\n                    handleFormSubmit={this.handleReceivingPlaylistSubmit}\n                  />\n                  <h3 style={{backgroundColor: \"coral\"}}>{this.state.receivingPlaylist.name}</h3>\n                  <h5>Your saved public playlists</h5>\n                  <List>\n                    {this.state.userPlaylists.map(item => (\n                      <div key={item.id} style={{ display: item.owner.id === this.state.userData.id ? 'none' : '' }}>\n                        <ListItem>\n                          <strong>\n                            {item.name}\n                          </strong>\n                          <SelectBtn onClick={() => this.handleReceivingPlaylistSubmitLink(item.id)} />\n                        </ListItem>\n                      </div>\n                    ))}\n                  </List>\n                </div>\n              ) : (\n                  <div>\n                    <h3>Select Your Playlist</h3>\n                  </div>\n                )}\n              <br/>\n              <h3 style={{backgroundColor: \"coral\"}}>{this.state.selectedSendingPlaylistDetails.name}</h3>\n              <h5>Your personal playlists</h5>\n              <List>\n                {this.state.userPlaylists.map(item => (\n                  <div key={item.id} style={{ display: item.owner.id === this.state.userData.id ? '' : 'none' }}>\n                    <ListItem>\n                      <strong>\n                        {item.name}\n                      </strong>\n                      <SelectBtn onClick={() => this.handleSendingPlaylistSubmitLink(item.id)} />\n                    </ListItem>\n                  </div>\n                ))}\n              </List>\n            </Card>\n            <Card heading=\"Banished Songs\">\n              {this.state.userData ? (\n                <span\n                  onClick={() => this.unBanishAllSongs()}\n                  className=\"btn btn-success\"\n                  role=\"button\"\n                  tabIndex=\"0\">\n                  Unbanish All Songs\n                </span>\n              ) : (\n                  <div>\n                  </div>\n                )}\n              <List>\n                {this.state.banishedSongs.map(banishedTrack => (\n                  <ListItem key={banishedTrack._id}>\n                    <strong>\n                      <u>\n                        {banishedTrack.title}\n                      </u>\n                      <br />\n                      by {banishedTrack.artists}\n                    </strong>\n                    <DeleteBtn onClick={() => this.deleteSong(banishedTrack._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MixTapeContainer;\n","import React from \"react\";\nimport MixTapeContainer from \"../MixTapeContainer\"\n\nfunction Search() {\n  return <MixTapeContainer />;\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavTabs from \"./components/NavTabs\";\nimport MixTapeHome from \"./components/pages/MixTapeHome\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavTabs />\n        <Route exact path=\"/\" component={MixTapeHome} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}